#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

set -e
set -x

env

buildDir="${1?Missing build directory}"
cacheDir="${2?Missing cache directory}"

MY_DIR="$( cd -P "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
BUILD_RC="$(dirname ${MY_DIR})/buildpack.rc"
. "${BUILD_RC}"

s3Bucket="${s3Bucket?Missing s3Bucket}"
buildNumber="${buildNumber?Missing buildNumber}"

echo "-----> Bundling build ${buildNumber}"
vendorDir="${buildDir}/vendor"
[ ! -e "${vendorDir}" ] && mkdir "${vendorDir}"
buildFileUrl="https://s3.amazonaws.com/${s3Bucket}/builds/${buildNumber}/build.tar.gz"
curl --silent --max-time 60 --location "${buildFileUrl}" | tar xz -C "${vendorDir}" --keep-old-files

confDir="$(dirname ${MY_DIR})/conf/"
httpdConfFile="${vendorDir}/apache/conf/httpd.conf"
[ ! -e "${httpdConfFile}" ] && cp "${confDir}/httpd.conf" "${httpdConfFile}"

phpConfFile="${vendorDir}/php/etc/php.ini"
[ ! -e "${phpConfFile}" ] && cp "${confDir}/php.ini" "${phpConfFile}"
phpConfScanDir="${vendorDir}/php/etc/ext.d"
[ ! -e "${phpConfScanDir}" ] && mkdir "${phpConfScanDir}"

herokuDir="${vendorDir}/heroku"
[ ! -e "${herokuDir}" ] && mkdir "${herokuDir}"
herokuWebScript="${herokuDir}/web.sh"
[ ! -e "${herokuWebScript}" ] && cp "${confDir}/heroku_web.sh" "${herokuWebScript}"

newRelicConf="${phpConfScanDir}/newrelic.ini"
[ ! -e "${newRelicConf}" ] && cp "${confDir}/newrelic.ini" "${newRelicConf}"

# clean the cache
rm -rf "${cacheDir}"
